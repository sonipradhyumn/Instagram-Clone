[{"D:\\React\\instagram using react js\\instagram frontend\\src\\index.js":"1","D:\\React\\instagram using react js\\instagram frontend\\src\\reportWebVitals.js":"2","D:\\React\\instagram using react js\\instagram frontend\\src\\App.js":"3","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\navbar.js":"4","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\CreatePost.js":"5","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Login.js":"6","D:\\React\\instagram using react js\\instagram frontend\\src\\reducers\\userReducer.js":"7","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Signup.js":"8","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\FirstPage.js":"9","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Home.js":"10","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Profile.js":"11"},{"size":505,"mtime":1611399891032,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2339,"mtime":1613753686954,"results":"15","hashOfConfig":"13"},{"size":1370,"mtime":1613762427343,"results":"16","hashOfConfig":"13"},{"size":3756,"mtime":1613722879722,"results":"17","hashOfConfig":"13"},{"size":2888,"mtime":1612611243014,"results":"18","hashOfConfig":"13"},{"size":224,"mtime":1613734731779,"results":"19","hashOfConfig":"13"},{"size":2908,"mtime":1611929348249,"results":"20","hashOfConfig":"13"},{"size":2118,"mtime":1612983737132,"results":"21","hashOfConfig":"13"},{"size":6824,"mtime":1614340389115,"results":"22","hashOfConfig":"13"},{"size":1978,"mtime":1613388181373,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"uq1mo3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"D:\\React\\instagram using react js\\instagram frontend\\src\\index.js",[],["53","54"],"D:\\React\\instagram using react js\\instagram frontend\\src\\reportWebVitals.js",[],"D:\\React\\instagram using react js\\instagram frontend\\src\\App.js",["55","56","57"],"//import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport NavBar from './components/navbar';\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom';\nimport Home from './components/Screens/Home';\nimport CreatePost from './components/Screens/CreatePost';\nimport Signin from './components/Screens/Login';\n//\nimport FirstPage from './components/Screens/FirstPage';\n//\nimport Signup from './components/Screens/Signup';\nimport Profile from './components/Screens/Profile';\nimport {reducer, initialState} from './reducers/userReducer';\n//import  from './components/Screens/'\nexport const UserContext = createContext ();\n\nconst Routing = () => {\n  //2:17-6/2/21\n  // we are making this for having history of user   which got token or not then we can redirect it to diffrent page\n  // we can not do if the routes are inside thte browserRouter so we are making this\n  //now we can access the history here\n const history = useHistory ();\n  const {state, dispatch} = useContext (UserContext);\n  useEffect (() => {\n    const user = JSON.parse (localStorage.getItem ('user'));\n    //console.log (typeof user, user);  for checking the type of user is it a string?\n    if (user) {\n      //this dispatch is because if the user close the browser but not logout\n      // then this will not let the state get distroid and if he visit again then he should be able to view his protected resources\n      dispatch ({type: 'USER', payload: user});\n      \n    } else {\n      history.push ('/Signin');\n    }\n  }, []);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/Signin\">\n        <Signin />\n      </Route>\n      <Route exact path=\"/Signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/Profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/createpost\">\n        <CreatePost />\n      </Route>\n    </Switch>\n  );\n};\nfunction App () {\n  const [state, dispatch] = useReducer (reducer, initialState);\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n      <BrowserRouter>\n        \n         <NavBar />\n        <Routing />\n        {/* <FirstPage />*/}\n        \n          \n\n        \n\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\navbar.js",[],"D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\CreatePost.js",["58","59"],"import React, {useState, useEffect} from 'react';\r\nimport {useHistory,Link} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nconst CreatePost = () => {\r\n  //hooks\r\n  const history = useHistory ();\r\n  const [title, setTitle] = useState ('');\r\n  const [body, setBody] = useState ('');\r\n  const [image, setImage] = useState ('');\r\n  const [url, setUrl] = useState ('');\r\n  //useeffect will let us  wait when url will change then we will able to post the photo into or mongodb\r\n  useEffect (\r\n    () => {\r\n      if (url) {\r\n        // second  post detail for storing pic on mongodb\r\n\r\n        /*  issue  (to correct  this we use < useEfect > hook )\r\n      if we write below after the cloudnary than \r\n       IF WE UPLOAD ANY PHOTO THEN IT FIRST SAVED IN CLOUDNARY AND THEN \r\n       WE GET KINK OF PHOTO AND IT GET  POSTED INTO MONGODB\r\n*/\r\n\r\n        fetch ('/createpost', {\r\n          //WE ARE USING POST METHOD IN SIGNIN\r\n          method: 'post',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            //here tho get that token we use authorization and get item here\r\n            Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n          },\r\n          body: JSON.stringify ({\r\n            title,\r\n            body,\r\n            pic: url,\r\n          }),\r\n        })\r\n          .then (res => res.json ())\r\n          .then (data => {\r\n            console.log (data);\r\n            if (data.error) {\r\n              M.toast ({html: data.error, classes: '#c62828 red darken-3'});\r\n            } else {\r\n              M.toast ({\r\n                // IF THE DATA ENTER MATCHED TO THE SAVED DATA THEN WE WILL WELCOM THE USER\r\n                html: 'Created post sucessfully',\r\n                classes: '#43a047 green darken-1',\r\n              });\r\n              //DIRECTING THE USER TO HOME PAGE\r\n              history.push ('/');\r\n            }\r\n          })\r\n          .catch (err => {\r\n            console.log (err);\r\n          });\r\n      }\r\n    },\r\n    [url]\r\n  );\r\n\r\n  const postDetails = () => {\r\n    ///  posting photo on cloudnary platform\r\n    const data = new FormData ();\r\n    data.append ('file', image);\r\n    data.append ('upload_preset', 'insta-clone');\r\n    //data.append ('<type of preset>','<NAME OF THE UPLOAD PRESET>')\r\n    data.append ('cloud_name', 'instagramimage');\r\n    //data.append ('<CLOUD NAME>','<NAME OF THE could>')\r\n    fetch ('https://api.cloudinary.com/v1_1/instagramimage/image/upload', {\r\n      method: 'post',\r\n      body: data,\r\n    })\r\n      .then (res => res.json ())\r\n      .then (data => {\r\n        setUrl (data.url);\r\n        console.log (data);\r\n      })\r\n      .catch (err => console.log (err));\r\n    //------------------------------------------------------\r\n  };\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"card input-field cp\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        value={title}\r\n        onChange={e => setTitle (e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={e => setBody (e.target.value)}\r\n      />\r\n      <div className=\"file-field input-field cp\">\r\n        <div className=\"btn waves-effect waves-light #64b5f6 blue darken-2\">\r\n          <span>Upload Image</span>\r\n          <input type=\"file\" onChange={e => setImage (e.target.files[0])} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n\r\n      </div>\r\n      <button\r\n        className=\"btn waves-effect waves-light #64b5f6 blue darken-2\"\r\n        onClick={() => {\r\n          postDetails ();\r\n        }}\r\n      >\r\n        Post\r\n      </button>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Login.js",["60","61","62"],"import React, {useState, useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nconst Login = () => {\r\n  //hooks\r\n  const {state, dispatch} = useContext (UserContext);\r\n  const history = useHistory ();\r\n  const [password, setPassword] = useState ('');\r\n  const [email, setEmail] = useState ('');\r\n\r\n  const PostData = () => {\r\n    // THIS POSTDATA FUNCTION WILL RUN WHEN USER WILL CLICK ON  BUTTON\r\n    // APPLYING VALIDATION TO EMAIL\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test (\r\n        email\r\n      )\r\n    ) {\r\n      return M.toast ({html: 'invalid email', classes: '#c62828 red darken-3'});\r\n    }\r\n\r\n    fetch ('/signin', {\r\n      //WE ARE USING POST METHOD IN SIGNIN\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify ({\r\n        password,\r\n        email,\r\n      }),\r\n    })\r\n      .then (res => res.json ())\r\n      .then (data => {\r\n        console.log (data);\r\n        if (data.error) {\r\n          M.toast ({html: data.error, classes: '#c62828 red darken-3'});\r\n        } else {\r\n          //storing user detail  and token in local storage\r\n          localStorage.setItem ('jwt', data.token);\r\n          localStorage.setItem ('user', JSON.stringify (data.user));\r\n          // here dispatch ther user and data to user Reducer.js\r\n          dispatch ({type: 'USER', payload: data.user});\r\n          M.toast ({\r\n            // IF THE DATA ENTER MATCHED TO THE SAVED DATA THEN WE WILL WELCOM THE USER\r\n            html: 'welcome to instagram ',\r\n            classes: '#43a047 green darken-1',\r\n          });\r\n          //DIRECTING THE USER TO HOME PAGE\r\n          history.push ('/');\r\n        }\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Instagram</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          //ON CHANGE EVENT WIL UPDATE THE VALUE WE ARE TYPING TO VALUE\r\n          onChange={e => setEmail (e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={e => setPassword (e.target.value)}\r\n        />\r\n        <h6 className=\"fp\"> forget password? </h6>\r\n\r\n        <button\r\n          className=\"btn waves-effect waves.light #64b5f6 blue darken-2\"\r\n          onClick={() => PostData ()}\r\n        >\r\n          Login\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/Signup\">Create an Account? </Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","D:\\React\\instagram using react js\\instagram frontend\\src\\reducers\\userReducer.js",[],"D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Signup.js",["63","64"],"import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nconst Signup = () => {\r\n  //hook\r\n  //**********              integration of api                                  *********** */\r\n  const history = useHistory ();\r\n  const [name, setName] = useState ('');\r\n  const [phoneNo, setphoneNo] = useState ('');\r\n  const [email, setEmail] = useState ('');\r\n  const [password, setPassword] = useState ('');\r\n  const [cpassword, setCpassword] = useState ('');\r\n\r\n  const PostData = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test (\r\n        email\r\n      )\r\n    ) {\r\n      return M.toast ({html: 'invalid email', classes: '#c62828 red darken-3'});\r\n    }\r\n    if (cpassword !== password) {\r\n      return M.toast ({\r\n        html: 'invalid confirm password',\r\n        classes: '#c62828 red darken-3',\r\n      });\r\n    }\r\n    fetch ('/signup', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify ({\r\n        name,\r\n        phoneNo,\r\n        password,\r\n        email,\r\n      }),\r\n    })\r\n      .then (res => res.json ())\r\n      .then (data => {\r\n        if (data.error) {\r\n          M.toast ({html: data.error, classes: '#c62828 red darken-3'});\r\n        } else {\r\n          M.toast ({html: data.message, classes: '#43a047 green darken-1'});\r\n          history.push ('/signin');\r\n        }\r\n      });\r\n  };\r\n  /******************************************************/\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>Instagram</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={e => setName (e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone No\"\r\n          value={phoneNo}\r\n          onChange={e => setphoneNo (e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={e => setEmail (e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={e => setPassword (e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={cpassword}\r\n          onChange={e => setCpassword (e.target.value)}\r\n        />\r\n        <button\r\n          className=\"btn waves-effect waves.light #64b5f6 blue darken-2\"\r\n          onClick={() => PostData ()}\r\n        >\r\n          SignUp\r\n        </button>\r\n        <h5><Link to=\"/Signin\">Already have an Account? </Link></h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Signup;\r\n","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\FirstPage.js",[],"D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Home.js",["65","66"],"import React, {useState, useEffect, useContext} from 'react';\r\n// for knowing who is currently loged in we are using context 2.35 19/2/21\r\nimport {UserContext} from '../../App';\r\nconst Home = () => {\r\n  const [data, setData] = useState ([]);\r\n  // const [comment, setComment] = useState ('');\r\n  // 18/2/21  here state will have the detail who are loged in\r\n  const {state, dispatch} = useContext (UserContext);\r\n\r\n  useEffect (() => {\r\n    //3:14-7/2/21\r\n    //\r\n    fetch ('/allpost', {\r\n      headers: {\r\n        //here when we have used requirelogin\r\n        //so the  token should match exact as we hve initilized\r\n        // here in 'Bearer ' there is 1 space which is also important\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        setData (result.posts);\r\n      });\r\n  }, []);\r\n  const likepost = id => {\r\n    console.log ('you liked this post');\r\n    fetch ('/like', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n      body: JSON.stringify ({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        const newData = data.map (item => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData (newData);\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n      });\r\n  };\r\n\r\n  const unlikepost = id => {\r\n    console.log ('you unliked this post');\r\n    fetch ('/unlike', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n      body: JSON.stringify ({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        const newData = data.map (item => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData (newData);\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n      });\r\n  };\r\n  // implement comment 26/2/2021\r\n  //// we want to send  TEXT & POSTID TO BACKEND\r\n  const makeComment = (text, postId) => {\r\n    //makeing request\r\n    fetch ('/comment', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n      body: JSON.stringify ({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        console.log (result);\r\n        const newData = data.map (item => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData (newData);\r\n      })\r\n      .catch (err => {\r\n        console.log (err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    \r\n    fetch (`/deletepost/${postid}`, {\r\n      method: 'delete',\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        console.log (result);\r\n        const newData = data.filter (item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData (newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map (item => {\r\n        /*\r\n          //                                    IT IS STATIC POST \r\n           return (\r\n          <div className=\"card home-card\">\r\n            <h5>PRADHYUMN SONI</h5>\r\n            <div className=\" card-image\">\r\n              <img src=\"https://i.pinimg.com/280x280_RS/5e/e6/50/5ee65021ea0c893cdec6d8e5e5246524.jpg\" />\r\n\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <i className=\"material-icons\" style={{color: 'red'}}>\r\n                favorite_border\r\n              </i>\r\n              <h6>title</h6>\r\n              <p>this is amazing post</p>\r\n              <input type=\"text\" placeholder=\"Add a comment\" />\r\n            </div>\r\n          </div>\r\n          */\r\n\r\n        //                                  NOW ITS DYNAMIC POST\r\n\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5>\r\n              {item.postedBy.name}\r\n              {//checking if user post and loged in user are same then he can delete the post\r\n              item.postedBy._id === state._id &&\r\n                <i\r\n                  class=\"material-icons\"\r\n                  style={{float: 'right'}}\r\n                  onClick={() => deletePost (item._id)}\r\n                >\r\n                  delete{' '}\r\n                </i>}\r\n            </h5>\r\n            <div className=\" card-image\">\r\n              <img src={item.photo} />\r\n\r\n            </div>\r\n            <div className=\"card-content\">\r\n\r\n              {//here we are checking that if user have liked then we will hide the like button and vice varsa\r\n              // using ternairy operator\r\n              item.likes.includes (state._id)\r\n                ? <i\r\n                    className=\"material-icons\"\r\n                    style={{color: 'red'}}\r\n                    onClick={() => {\r\n                      unlikepost (item._id);\r\n                    }}\r\n                  >\r\n                    favorite\r\n                  </i>\r\n                : <i\r\n                    className=\"material-icons\"\r\n                    style={{color: 'red'}}\r\n                    onClick={() => {\r\n                      likepost (item._id);\r\n                    }}\r\n                  >\r\n                    favorite_border\r\n                  </i>}\r\n\r\n              <h6>{item.likes.length} likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map (record => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{fontWeight: '500'}}>\r\n                      {record.postedBy.name}\r\n                    </span>\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={e => {\r\n                  e.preventDefault ();\r\n                  makeComment (e.target[0].value, item._id);\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  /* here hook was not used in video  */\r\n                />\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        );\r\n        //\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","D:\\React\\instagram using react js\\instagram frontend\\src\\components\\Screens\\Profile.js",["67","68"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nconst Profile = () => {\r\n  // her use state will fetch the pic from the data \r\n  const [mypics, setPics] = useState ([]);\r\n  const {state, dispatch} = useContext (UserContext);\r\n  useEffect (() => {\r\n    //3:14-7/2/21\r\n    //\r\n    fetch ('/mypost', {\r\n      headers: {\r\n        //here when we have used requirelogin\r\n        //so the  token should match exact as we hve initilized\r\n        // here in 'Bearer ' there is 1 space which is also important\r\n        Authorization: 'Bearer ' + localStorage.getItem ('jwt'),\r\n      },\r\n    })\r\n      .then (res => res.json ())\r\n      .then (result => {\r\n        setPics (result.mypost);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{maxWidth: '650px', margin: '0px auto'}}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          margin: '18px 0px',\r\n          borderBottom: '1px solid grey',\r\n        }}\r\n      >\r\n        <div>\r\n          <img\r\n            style={{width: '160px', height: '160px', borderRadius: '80px'}}\r\n            src=\"https://pbs.twimg.com/profile_images/1283826823982247937/WS26GTQ5.jpg\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4>{state?state.name:\"loading\"}</h4>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              width: '108%',\r\n            }}\r\n          >\r\n            <h6>40 post</h6>\r\n            <h6>40 followers</h6>\r\n            <h6>40 following</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gallery\">\r\n        {mypics.map (item => {\r\n          return (\r\n            <img\r\n              key={item._id}\r\n              className=\"item\"\r\n              src={item.photo}\r\n              alt={item.title}\r\n            />\r\n          );\r\n        })}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":24,"column":10,"nodeType":"75","messageId":"76","endLine":24,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":36,"column":6,"nodeType":"80","endLine":36,"endColumn":8,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"82","line":2,"column":20,"nodeType":"75","messageId":"76","endLine":2,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":57,"column":5,"nodeType":"80","endLine":57,"endColumn":10,"suggestions":"84"},{"ruleId":"73","severity":1,"message":"77","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":16,"column":18,"nodeType":"87","messageId":"88","endLine":16,"endColumn":19,"suggestions":"89"},{"ruleId":"85","severity":1,"message":"86","line":16,"column":43,"nodeType":"87","messageId":"88","endLine":16,"endColumn":44,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"86","line":16,"column":18,"nodeType":"87","messageId":"88","endLine":16,"endColumn":19,"suggestions":"91"},{"ruleId":"85","severity":1,"message":"86","line":16,"column":43,"nodeType":"87","messageId":"88","endLine":16,"endColumn":44,"suggestions":"92"},{"ruleId":"73","severity":1,"message":"93","line":8,"column":17,"nodeType":"75","messageId":"76","endLine":8,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":171,"column":15,"nodeType":"96","endLine":171,"endColumn":39},{"ruleId":"73","severity":1,"message":"93","line":6,"column":17,"nodeType":"75","messageId":"76","endLine":6,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":35,"column":11,"nodeType":"96","endLine":38,"endColumn":13},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'FirstPage' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["99"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["100"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["101","102"],["103","104"],["105","106"],["107","108"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"messageId":"113","fix":"114","desc":"115"},{"messageId":"116","fix":"117","desc":"118"},{"messageId":"113","fix":"119","desc":"115"},{"messageId":"116","fix":"120","desc":"118"},{"messageId":"113","fix":"121","desc":"115"},{"messageId":"116","fix":"122","desc":"118"},{"messageId":"113","fix":"123","desc":"115"},{"messageId":"116","fix":"124","desc":"118"},"Update the dependencies array to be: [dispatch, history]",{"range":"125","text":"126"},"Update the dependencies array to be: [body, history, title, url]",{"range":"127","text":"128"},"removeEscape",{"range":"129","text":"130"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"131","text":"132"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"133","text":"130"},{"range":"134","text":"132"},{"range":"135","text":"130"},{"range":"136","text":"132"},{"range":"137","text":"130"},{"range":"138","text":"132"},[1585,1587],"[dispatch, history]",[1994,1999],"[body, history, title, url]",[561,562],"",[561,561],"\\",[586,587],[586,586],[583,584],[583,583],[608,609],[608,608]]